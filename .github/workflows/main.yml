name: Full Pipeline

on:
  push:
    branches: [ "master" ]
    
jobs: 
  infra-test: 
    name: Infrastructure Test
    concurrency: test-environment
    runs-on: ubuntu-latest
    environment: test
    defaults:
      run:
        working-directory: './infra/environments/test'
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: get kafka topic config
        working-directory: './packages/kafka'
        run: |
          yarn
          yarn export-topics

      - uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}
      - run: terraform init
      - name: create tfvars file
        uses: DamianReeves/write-file-action@master
        with:
          path: ./infra/environments/test/test.tfvars
          write-mode: overwrite
          contents: |
            discord_token="${{ secrets.DISCORD_TOKEN }}"
            postgres_password="${{ secrets.POSTGRES_PASSWORD }}"
            aws_access_key="${{ vars.AWS_TOKEN_USERNAME }}"
            aws_access_secret="${{ secrets.AWS_TOKEN_PASSWORD }}"
            upstash_api_key="${{ secrets.UPSTASH_API_KEY }}"
            upstash_email="${{ secrets.UPSTASH_EMAIL }}"

      - name: terraform plan
        run: terraform plan -no-color -var-file="test.tfvars"

      - name: terraform apply
        if: ${{ steps.plan.outputs.exitcode }} = 2
        run: terraform apply -no-color -auto-approve -var-file="test.tfvars"
        
